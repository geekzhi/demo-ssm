<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekzhang.demo.mapper.UserFileMapper">

    <resultMap id="userFile" type="com.geekzhang.demo.orm.UserFile">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="suffixName" column="suffixName"/>
        <result property="path" column="path"/>
        <result property="type" column="type"/>
        <result property="userId" column="userId"/>
        <result property="size" column="size"/>
        <result property="parentPath" column="parentPath"/>
        <result property="delete" column="delete"/>
        <result property="deleteTime" column="deleteTime"/>
        <result property="shareCode" column="shareCode"/>
        <result property="shareValid" column="shareValid"/>
        <result property="sharePass" column="sharePass"/>
        <result property="shareTime" column="shareTime"/>
        <result property="downloadTimes" column="downloadTimes"/>
        <result property="star" column="star"/>
        <result property="md5" column="md5"/>
    </resultMap>

    <sql id="selectColumns">
        `id`, `name`, `suffixName`, `path`, `type`, `userId`, `size`, `parentPath`, `delete`, `deleteTime`, `shareCode`, `shareValid`, `sharePass`, `shareTime`, `downloadTimes`, `star`, `md5`
    </sql>

    <sql id="insertColumns">
        <trim suffixOverrides=",">
            <if test="name!=null">
                name,
            </if>

            <if test="suffixName!=null">
                suffixName,
            </if>

            <if test="path!=null">
                path,
            </if>

            <if test="type!=null">
                type,
            </if>

            <if test="userId!=null">
                userId,
            </if>

            <if test="size!=null">
                size,
            </if>

            <if test="parentPath!=null">
                parentPath,
            </if>

            <if test="md5!=null">
                md5,
            </if>
        </trim>
    </sql>

    <sql id="insertValues">
        <trim suffixOverrides=",">
            <if test="name!=null">
                #{name},
            </if>

            <if test="suffixName!=null">
                #{suffixName},
            </if>

            <if test="path!=null">
                #{path},
            </if>

            <if test="type!=null">
                #{type},
            </if>

            <if test="userId!=null">
                #{userId},
            </if>

            <if test="size!=null">
                #{size},
            </if>

            <if test="parentPath!=null">
                #{parentPath},
            </if>

            <if test="md5!=null">
                #{md5},
            </if>
        </trim>
    </sql>

    <select id="getTotalByType" parameterType="String" resultType="Integer">
        select ifnull(count(*), 0) from user_file where userId = #{userId} and `type` = #{type}
    </select>

    <select id="getTotalNoTrashByType" parameterType="String" resultType="Integer">
        select ifnull(count(*), 0) from user_file where userId = #{userId} and `delete` = 0 and `type` = #{type}
    </select>

    <select id="getSizeNoTrashByType" parameterType="String" resultType="Integer">
        select ifnull(sum(size), 0) from user_file where
           userId = #{userId} and `delete` = 0 and `type` = #{type}
    </select>

    <select id="getTotalTrash" parameterType="String" resultType="Integer">
        select ifnull(count(*), 0) from user_file where userId = #{userId} and `delete` = 1
    </select>

    <select id="getTotalNoTrash" parameterType="String" resultType="Integer">
        select ifnull(count(*), 0) from user_file where userId = #{userId} and `delete` = 0
    </select>

    <select id="getTrashFileList" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId} and `delete` = 1
    </select>

    <select id="getShareFileList" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId} and `delete` = 0 and `shareValid` &lt;&gt; 0
    </select>

    <select id="getFileById" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where id = #{id}
    </select>

    <select id="getFileByShareCode" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where shareCode = #{shareCode}
    </select>

    <select id = "getFileList" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId}
    </select>

    <select id = "searchFile" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId} and `delete` = "0" and `name` like "%"#{name}"%"
    </select>

    <select id="getFileNumByParentPath" parameterType="String" resultType="Integer">
        select ifnull(count(*), 0) from user_file where `parentPath` = #{parentPath}
    </select>

    <select id = "getFileListByPath" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/>
          from user_file
          where `userId` = #{userId} and `parentPath` = #{parentPath} and `delete` = 0
        group by path, name, id
    </select>

    <select id = "getFileListByType" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId} and `type` = #{type}
    </select>

    <select id="getFileListByStar" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId} and `star` = #{star}
    </select>

    <select id="getFileByMd5" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where `md5` = #{md5}
    </select>

    <insert id="insert" parameterType="com.geekzhang.demo.orm.UserFile">
        insert into user_file (<include refid="insertColumns"/>) values (<include refid="insertValues"/>);
    </insert>

    <insert id="insertFolder" parameterType="String">
        insert into user_file (userId, name, suffixName, parentPath) values (#{userId}, #{name}, #{name}, #{parentPath})
    </insert>

    <update id="updateFolderDeleteById">
        update user_file u set `delete` = #{deleteFlag}, `deleteTime` = #{deleteTime} where u.id in(
          select a.id from (
            select id from user_file where parentPath = (
              select concat(parentPath , name) from user_file where id = #{id}
		    )
	      ) a
        )
    </update>

    <update id="updateFileDeleteById">
        update user_file set `delete` = #{deleteFlag}, `deleteTime` = #{deleteTime} where `id` = #{id}
    </update>

    <update id="updateAllFileDelete">
        update user_file set `delete` = #{deleteFlag} where `userId` = #{userId}
    </update>

    <update id="modifyFileNameById">
        update user_file set `name` = #{name} where `id` = #{id} and `userId` = #{userId}
    </update>

    <update id="modifyFolderName">
        update user_file set `suffixName` = #{suffixName} where `id` = #{id} and `userId` = #{userId}
    </update>

    <update id="updateShareFile">
        update user_file
        set `shareValid` = #{shareValid},
             `sharePass` = #{sharePass},
             `shareCode` = #{shareCode},
             `shareTime` = #{shareTime}
        where `id` = #{id} and `userId` = #{userId}
    </update>

    <update id="updateDownloadTimes">
        update user_file set `downloadTimes` = `downloadTimes` + 1 where `id` = #{ id }
    </update>

    <update id="updateCnacelShare">
        update user_file set `shareValid` = 0 where `userId` = #{ userId } and `id` = #{ id }
    </update>

    <update id="updateStar">
        update user_file set `star` = #{star} where `userId` = #{userId} and `id` = #{id}
    </update>

    <delete id="deleteScheduled">
        delete from user_file where date_add(`deleteTime`, interval 30 day) &lt; CURRENT_DATE() and `userId` in (
        select `id` from user where vip = 1
        )
    </delete>
</mapper>