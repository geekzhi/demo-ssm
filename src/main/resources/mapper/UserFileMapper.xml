<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekzhang.demo.mapper.UserFileMapper">

    <resultMap id="userFile" type="com.geekzhang.demo.orm.UserFile">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="suffixName" column="suffixName"/>
        <result property="path" column="path"/>
        <result property="type" column="type"/>
        <result property="userId" column="userId"/>
        <result property="size" column="size"/>
        <result property="parentPath" column="parentPath"/>
    </resultMap>

    <sql id="selectColumns">
        id, name, suffixName, path, type, userId, size, parentPath
    </sql>

    <sql id="insertColumns">
        <trim suffixOverrides=",">
            <if test="name!=null">
                name,
            </if>

            <if test="suffixName!=null">
                suffixName,
            </if>

            <if test="path!=null">
                path,
            </if>

            <if test="type!=null">
                type,
            </if>

            <if test="userId!=null">
                userId,
            </if>

            <if test="size!=null">
                size,
            </if>

            <if test="parentPath!=null">
                parentPath,
            </if>
        </trim>
    </sql>

    <sql id="insertValues">
        <trim suffixOverrides=",">
            <if test="name!=null">
                #{name},
            </if>

            <if test="suffixName!=null">
                #{suffixName},
            </if>

            <if test="path!=null">
                #{path},
            </if>

            <if test="type!=null">
                #{type},
            </if>

            <if test="userId!=null">
                #{userId},
            </if>

            <if test="size!=null">
                #{size},
            </if>

            <if test="parentPath!=null">
                #{parentPath},
            </if>
        </trim>
    </sql>

    <select id="getTotalByType" parameterType="String" resultType="Integer">
        select count(*) from user_file where userId = #{userId} and `type` = #{type}
    </select>

    <select id="getTotalTrash" parameterType="String" resultType="Integer">
        select count(*) from user_file where userId = #{userId} and `delete` = 1
    </select>

    <select id="getTrashFileList" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId} and `delete` = 1
    </select>

    <select id="getFileById" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where id = #{id}
    </select>

    <select id = "getFileList" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId}
    </select>

    <select id = "getFileListByPath" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/>
          from user_file
          where `userId` = #{userId} and `parentPath` = #{parentPath} and `delete` = 0
        group by path, name, id
    </select>

    <select id = "getFileListByType" parameterType="String" resultMap="userFile">
        select <include refid="selectColumns"/> from user_file where userId = #{userId} and `type` = #{type}
    </select>

    <insert id="insert" parameterType="com.geekzhang.demo.orm.UserFile">
        insert into user_file (<include refid="insertColumns"/>) values (<include refid="insertValues"/>);
    </insert>

    <insert id="insertFolder" parameterType="String">
        insert into user_file (userId, name, parentPath) values (#{userId}, #{name}, #{parentPath})
    </insert>

    <update id="updateFolderDeleteById">
        update user_file u set `delete` = #{deleteFlag}, `deleteTime` = #{deleteTime} where u.id in(
          select a.id from (
            select id from user_file where parentPath = (
              select concat(parentPath , name) from user_file where id = #{id}
		    )
	      ) a
        )
    </update>

    <update id="updateFileDeleteById">
        update user_file set `delete` = #{deleteFlag}, `deleteTime` = #{deleteTime} where `id` = #{id}
    </update>
</mapper>